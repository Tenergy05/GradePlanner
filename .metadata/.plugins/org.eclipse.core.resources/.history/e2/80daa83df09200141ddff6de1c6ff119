package com.example.gradeplanner;

import com.example.gradeplanner.CourseContract.CourseEntry;
import com.example.gradeplanner.CourseContract.TestEntry;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

public class ViewCourseActivity extends Activity {

	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_view_course);
		
		Intent intent=getIntent();
		int courseNum=intent.getIntExtra(MainActivity.EXTRA_COURSENUM, -1);
		CourseDBHelper dbHelper = new CourseDBHelper(this);
		SQLiteDatabase db = dbHelper.getReadableDatabase();
		
		String[] projection = {
	        	CourseEntry._ID,
		        CourseEntry.COLUMN_NAME_COURSE_CODE,
		        CourseEntry.COLUMN_NAME_GRADE,
		        CourseEntry.COLUMN_NAME_GOAL
	        };

        String sortOrder = CourseEntry._ID + " DESC";

        Cursor c = db.query(
        	CourseEntry.TABLE_NAME,
	        projection,
	        null,
	        null,
	        null,
	        null,
	        sortOrder
        );
        c.moveToFirst();
        for(int i=0;i<courseNum;i++)
        	c.moveToNext();
        
        String courseCode = c.getString(c.getColumnIndex(CourseEntry.COLUMN_NAME_COURSE_CODE));
        setTitle(courseCode);
        
        double grade=c.getDouble(c.getColumnIndex(CourseEntry.COLUMN_NAME_GRADE));
        double goal=c.getDouble(c.getColumnIndex(CourseEntry.COLUMN_NAME_GOAL));
        c.close();
        
        TextView gradeView=(TextView)findViewById(R.id.grade);
        gradeView.setText("Grade: " + grade);
        
        TextView goalView=(TextView)findViewById(R.id.goal);
        goalView.setText("Goal: " + goal);       
        
        c=db.rawQuery("select*from Tests WHERE CourseCode =?", new String[]{courseCode});
        c.moveToFirst();
        int numTests=c.getCount();
        
        TableLayout tl=(TableLayout)findViewById(R.id.tableLayout);
        
        for(int i=0;i<numTests;i++){
        	TableRow tr= new TableRow(this);
        	tr.setLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT));
        	TextView t1= new TextView(this);
        	t1.setTag("t"+i);
        	t1.setLayoutParams(new TableRow.LayoutParams(
        			TableRow.LayoutParams.WRAP_CONTENT,
        			TableRow.LayoutParams.WRAP_CONTENT,0.5f));
        	t1.setText(c.getString(c.getColumnIndex(TestEntry.COLUMN_NAME_TEST_NAME)));
        	tr.addView(t1);
        	
        	TextView t2= new TextView(this);
        	t2.setLayoutParams(new TableRow.LayoutParams(
        			TableRow.LayoutParams.WRAP_CONTENT,
        			TableRow.LayoutParams.WRAP_CONTENT,0.25f));
        	t2.setText(c.getString(c.getColumnIndex(TestEntry.COLUMN_NAME_GRADE)));
        	tr.addView(t2);
        	
        	TextView t3= new TextView(this);
        	t3.setLayoutParams(new TableRow.LayoutParams(
        			TableRow.LayoutParams.WRAP_CONTENT,
        			TableRow.LayoutParams.WRAP_CONTENT,0.25f));
        	t3.setText(c.getString(c.getColumnIndex(TestEntry.COLUMN_NAME_WEIGHT)));
        	tr.addView(t3);
        	tl.addView(tr, i+3);
        	c.moveToNext();
        }       	
	}

	public boolean onOptionsItemSelected(MenuItem item) {
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
}
